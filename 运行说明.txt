
allTypes_readXmlJsonProperties

************************************************************************************************************
************************ 01  Simple  读取本地磁盘文件   *********************************
0101
测试文件下载目录
1. 本地磁盘放置文件  E://tempData//productType20200408.txt
2. /resources/productType20200408.txt

0102
对比两种方式获取properties 文件，
方式一：  class.getResourceAsStream("/properties/test.properties");
方式二：  class.getClassLoader().getResourceAsStream("properties/test.properties");
方式一： 类的根目录，就是当前程序跟目录 /target/classes/
方式二： ClassLoader（类加载器）获取资源，而类加载器默认是从 classPath 下获取资源的，

0103
L2_ReadResource 各种获取路径方法 会一种就可以了

0104
三种方式获取本地文件（速度没有比较），用第三种 InputStream 方式，结构清晰
--------------------------------------------------------------------------------ReadByFileReaderTest-----------------
 * new BufferedReader( )
 *                    new FileReader( )
 *                                    new File( )
--------------------------------------------------------------------------------ReadByFileInpuStream-----------------
 * new BufferedReader(    )
 *                    new InputStreamReader(  )
 *                                           new InputStream()
--------------------------------------------------------------------------------ReadByFileInputStream02---------------
 * new BufferedInputStream(  )
 *                         new FileInpuStream( )


************************************************************************************************************
************************  01  Simple 读取resource下面的properties文件    *********************************


    // 最简单获取路径方法
    private static void getPathSimplest() {
        String path = ClassLoader.getSystemResource("redisConfig.properties").getPath();
        System.out.println(path);
    }


https://www.jianshu.com/p/efdd1a526939
Java 读取配置文件的五种方式
--------------------------------------------------------------------------------ReadProperties02WithResourceBundle----
 java.util.ResourceBundle 方式获取  一般不用

--------------------------------------------------------------------------------ReadPropertiesTest---------------

        String path="/redisConfig.properties";
        Properties props = new Properties();
        InputStream stream = ReadPropertiesTest.class.getClass().getResourceAsStream(path);
        props.load(stream);
只用三步，引用的是jdk 自己的包 比较轻量级。


--------------------------------------------------------------------------------ReadPropertiesTest04---------------
org.springframework.core.io.support.PropertiesLoaderUtils;

       String fileName = "redisConfig.properties";
        Properties props = new Properties();
        props=PropertiesLoaderUtils.loadAllProperties(fileName);
只用两步，直接加载数据到 Properties ，需要引入spring框架

************************************************************************************************************
************************  02 dom4j    *********************************
https://blog.csdn.net/linmengmeng_1314/article/details/79975599
--------------------------------------------------------------------------------Dom4jTest---------------
0201 引入配置文件
      <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-io -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
        </dependency>


        <!--DOM4J对XML进行解析，对XML包进行解析需要导入两个JAR包，DOM4J.JAR，和JAXEN.JAR，-->
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>1.6</version>
        </dependency>
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
            <version>1.1.4</version>
            <!--   <version>1.1-beta-6</version>-->
        </dependency>

0202  resources 目录下 放置xml文件 xmlTest202008.xml

0203  调试运行
        //01  读取Resource目录下的文件
        InputStream inputStream = Dom4jTest.class.getResourceAsStream("/xmlTest202008.xml");
        ReadStreamByDom4j(inputStream);

        //0201  读取本地磁盘下的文件
        String fileName0201="E://tempData//xmlTest20200408.txt";
        FileInputStream fileInputStream0201 =new FileInputStream(fileName0201);
        ReadStreamByDom4j(fileInputStream0201);

--------------------------------------------------------------------------------Dom4j02CreateTest---------------
 ---------注意配置文件位置需要是运行环境resource目录的本地计算机路径-------
 String localFilePath = "D:\\04_CodeFromNet\\allTypes_readXmlJsonProperties\\_02dom4j\\src\\main\\resources\\";
 String fileName = "dom4jhtml20200815.html";


--------------------------------------------------------------------------------Dom4j03ModifyTest---------------
//需要是本地真实路径
        String localPath = "D:\\04_CodeFromNet\\allTypes_readXmlJsonProperties\\_02dom4j\\src\\main\\resources\\";
        String fileName = "dom4jhtml20200814.html";
        //修改一个文档
        ModifyXmlFile(localPath, fileName, "dom4jhtmlNew.html");

************************************************************************************************************
************************ 03 jsoup     *********************************


jsoup02Modify   ----> 修改html文件
        //需要是本地真实路径
        String localPath = "D:\\04_CodeFromNet\\allTypes_readXmlJsonProperties\\_03jsoup\\src\\main\\resources\\";

jsoup03GetData
         获取数据源有三种
             * 1.  基于字符串方式
             * 2.  基于文件方式
             * 3.  基于URL方式
         String localFileName = "D:\\04_CodeFromNet\\allTypes_readXmlJsonProperties\\_03jsoup\\src\\main\\resources\\jsoup03Simple.html";

jsoup04GetElement
         Content: 获取元素 通过 id ，标签，类名，属性 获取元素
         String localFileName= "D:\\04_CodeFromNet\\allTypes_readXmlJsonProperties\\_03jsoup\\src\\main\\resources\\jsoup04GetElement.html";

jsoup05GetAttr
       获取内容和文本

************************************************************************************************************
************************ 04 jackson      *********************************

JacksonUtil  王旺喜欢用的类

************************************************************************************************************
************************ 05 fastjson    *********************************
https://blog.csdn.net/weixin_40076255/article/details/89373051

------------------------JSONObject------------------------
引用com.alibaba.fastjson  jar包
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.62</version>
        </dependency>
手工设置一个json对象，然后打印 json 字符串
json string is ： {"name":"lilei","id":123,"age":18}

------------------------JSONObject02------------------------
字符串赋值为  strUser
使用  JSON.parseObject(strUser,User.class); 转换字符串为对象实例，
可以按照面向对象的方式 打印对象的 某个字段


------------------------JSONObject03------------------------、
[
{"EncryptLat":"39.085965","TerminalType":"xgit_gprs_basic",...."TimeList":[
{"EndTime":"2020-08-12 07:34:40","StartTime":"2020-08-12 06:58:26"},
{"EndTime":"2020-08-12 08:48:41","StartTime":"2020-08-12 08:06:19"},
{"EndTime":"2020-08-12 12:37:37","StartTime":"2020-08-12 11:20:10"}, ....},
{"EncryptLat":"39.085976","TerminalType":"xgit_gprs_basic", ....................]
从大数据平台取出数据
找到TimeList 最多的一条
过滤其中错误时间  （当前记录时间小于上一条记录时间的 不记录当前记录  ）
输出结果



************************      *********************************


************************      *********************************